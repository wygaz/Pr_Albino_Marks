1) Liste as variáveis de ambiente relevantes
# Lista todas as variáveis de ambiente (procure por DATABASE_PUBLIC_URL / DATABASE_URL)
Get-ChildItem env: | Where-Object { $_.Name -match "DATABASE" } 


Se aparecer DATABASE_PUBLIC_URL com valor e DATABASE_URL não aparecer — é por isso que o Django não vê nada.

2) Copiar o valor público para a variável que o Django usa (sessão atual)

Se DATABASE_PUBLIC_URL já existe e está correta, execute:

# copia o valor
$env:DATABASE_URL = $env:DATABASE_PUBLIC_URL

# verifica
Write-Output $env:DATABASE_URL


Agora Write-Output $env:DATABASE_URL deve mostrar a URL completa (sem >). Se ainda aparecer um > ao final, remova com o comando abaixo.

3) Corrigir se sobrar um > no final (apenas se presente)
# remove > no final se houver
$env:DATABASE_URL = $env:DATABASE_URL.TrimEnd('>')
Write-Output $env:DATABASE_URL


Confirme que a URL termina em /railway ou ?sslmode=require (sem caracteres extras).

4) (Opcional) Atualizar a variável persistente para novas janelas

Se quiser que a mesma string fique disponível em novas janelas PowerShell (opcional — cuidado com segurança):

# substitua por cuidado: isso grava a variável no perfil do usuário
setx DATABASE_URL "$($env:DATABASE_URL)"
setx DB_SSL_REQUIRE "1"


Lembrete: setx só passa a valer em novas janelas. Na janela atual você já tem $env:DATABASE_URL porque fizemos a cópia manual.

Se quiser remover a persistente depois:

[Environment]::SetEnvironmentVariable("DATABASE_URL",$null,"User")
[Environment]::SetEnvironmentVariable("DB_SSL_REQUIRE",$null,"User")

5) Fazer checagens e rodar migrate (seguindo boas práticas)

1 — Verifica o Django:
python manage.py check


2 — Mostrar o plano de migrações (não altera nada):
python manage.py migrate --plan


3 — Aplicar migrations:
python manage.py migrate


4 — (opcional) checar via psql:
psql "$env:DATABASE_URL"
# no prompt do psql:
\dt
\q


5 — Criar superuser / coletar estáticos / runserver:
python manage.py createsuperuser
python manage.py collectstatic --noinput
python manage.py runserver

6) Limpar variáveis sensíveis da sessão após os testes
Remove-Item env:DATABASE_URL
Remove-Item env:DATABASE_PUBLIC_URL   # se quiser limpar também
Remove-Item env:DB_SSL_REQUIRE


